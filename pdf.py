import os
from reportlab.lib.pagesizes import A4
from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle
from reportlab.pdfbase import pdfmetrics
from reportlab.pdfbase.ttfonts import TTFont
from reportlab.lib.colors import HexColor
from datetime import datetime

def setup_fonts():
    font_dir = "fonts"
    os.makedirs(font_dir, exist_ok=True)
    font_path = os.path.join(font_dir, "DejaVuSans.ttf")
    
    if not os.path.exists(font_path):
        try:
            import urllib.request
            url = "https://github.com/dejavu-fonts/dejavu-fonts/raw/master/ttf/DejaVuSans.ttf"
            urllib.request.urlretrieve(url, font_path)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —à—Ä–∏—Ñ—Ç–∞: {e}")
    
    try:
        if os.path.exists(font_path):
            pdfmetrics.registerFont(TTFont('DejaVuSans', font_path))
            return 'DejaVuSans'
    except:
        pass
    return 'Helvetica'

FONT_NAME = setup_fonts()

def generate_pdf_report(user_data, recommendations, session_id):
    reports_dir = "reports"
    os.makedirs(reports_dir, exist_ok=True)
    
    filename = os.path.join(
        reports_dir,
        f"{session_id}_{datetime.now().strftime('%Y%m%d_%H%M%S')}.pdf"
    )
    
    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ø–æ–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã, —á—Ç–æ–±—ã —Ç–µ–∫—Å—Ç –Ω–µ –æ–±—Ä–µ–∑–∞–ª—Å—è
    doc = SimpleDocTemplate(
        filename,
        pagesize=A4,
        leftMargin=36,  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ª–µ–≤–æ–µ –ø–æ–ª–µ (–±—ã–ª–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 72, —É–º–µ–Ω—å—à–∞–µ–º –¥–æ 36 –ø—É–Ω–∫—Ç–æ–≤ = 0.5 –¥—é–π–º–∞)
        rightMargin=36,  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ø—Ä–∞–≤–æ–µ –ø–æ–ª–µ
        topMargin=36,  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤–µ—Ä—Ö–Ω–µ–µ –ø–æ–ª–µ
        bottomMargin=36,  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –Ω–∏–∂–Ω–µ–µ –ø–æ–ª–µ
        encoding='utf-8'
    )
    
    styles = getSampleStyleSheet()
    for style in ['Title', 'Heading2', 'Normal', 'Bullet']:
        styles[style].fontName = FONT_NAME
        styles[style].encoding = 'UTF-8'
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å—Ç–∏–ª—å –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
    styles['Normal'].textColor = HexColor('#333333')
    styles['Normal'].fontSize = 10  # –£–º–µ–Ω—å—à–∞–µ–º —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
    styles['Normal'].leading = 14  # –ú–µ–∂—Å—Ç—Ä–æ—á–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª
    styles['Normal'].wordWrap = 'CJK'  # –í–∫–ª—é—á–∞–µ–º –ø–µ—Ä–µ–Ω–æ—Å —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –¥–ª–∏–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫ (CJK —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è –∫–∏—Ä–∏–ª–ª–∏—Ü—ã)

    # –°—Ç–∏–ª—å –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
    styles['Title'].fontSize = 16
    styles['Title'].spaceAfter = 12
    styles['Heading2'].fontSize = 12
    styles['Heading2'].spaceAfter = 8

    # –°—Ç–∏–ª—å –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
    styles.add(ParagraphStyle(
        name='RecommendationTitle',
        parent=styles['Heading2'],
        fontSize=11,
        spaceAfter=6,
        textColor=HexColor('#4A4A4A')
    ))
    
    # –°—Ç–∏–ª—å –¥–ª—è —Å–ø–∏—Å–∫–æ–≤ (–ø—Ä–æ–±–ª–µ–º—ã, –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è)
    styles['Bullet'].fontSize = 10
    styles['Bullet'].leftIndent = 20  # –£–º–µ–Ω—å—à–∞–µ–º –æ—Ç—Å—Ç—É–ø –¥–ª—è —Å–ø–∏—Å–∫–æ–≤, —á—Ç–æ–±—ã —Ç–µ–∫—Å—Ç –Ω–µ –≤—ã—Ö–æ–¥–∏–ª –∑–∞ –≥—Ä–∞–Ω–∏—Ü—ã
    styles['Bullet'].spaceAfter = 4
    styles['Bullet'].wordWrap = 'CJK'

    # –°—Ç–∏–ª—å –¥–ª—è —Å–Ω–æ—Å–∫–∏
    footnote_style = styles['Normal'].clone('Footnote')
    footnote_style.fontSize = 8
    footnote_style.textColor = HexColor('#666666')
    footnote_style.leading = 10
    
    story = []
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    title = Paragraph("–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É—Ö–æ–¥—É –∑–∞ –∫–æ–∂–µ–π", styles['Title'])
    story.append(title)
    story.append(Spacer(1, 12))
    
    # –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    story.append(Paragraph("<b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>", styles['Heading2']))
    story.append(Spacer(1, 6))
    
    profile_items = [
        f"<b>–ò–º—è:</b> {user_data.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}",
        f"<b>–ü–æ–ª:</b> {user_data.get('gender', '–ù–µ —É–∫–∞–∑–∞–Ω')}",
        f"<b>–ë–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å:</b> {'–î–∞' if user_data.get('is_pregnant', False) else '–ù–µ—Ç'}",
        f"<b>–¢–∏–ø –∫–æ–∂–∏:</b> {user_data.get('skin_type', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω')}",
        f"<b>–í–æ–∑—Ä–∞—Å—Ç–Ω–∞—è –≥—Ä—É–ø–ø–∞:</b> {user_data.get('age_range', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}",
        f"<b>–ü—Ä–æ–±–ª–µ–º—ã:</b>"
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –ø—Ä–æ—Ñ–∏–ª—è –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–≥—Ä–∞—Ñ
    for item in profile_items[:-1]:  # –ë–µ–∑ –ø—Ä–æ–±–ª–µ–º
        story.append(Paragraph(item, styles['Normal']))
        story.append(Spacer(1, 4))
    
    # –ü—Ä–æ–±–ª–µ–º—ã –∫–∞–∫ —Å–ø–∏—Å–æ–∫
    story.append(Paragraph(profile_items[-1], styles['Normal']))
    problems = user_data.get('problem', '–ù–µ —É–∫–∞–∑–∞–Ω—ã').split(', ')
    for problem in problems:
        # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –∫–∞–∂–¥–∞—è –ø—Ä–æ–±–ª–µ–º–∞ –Ω–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–∞—è
        story.append(Paragraph(f"‚Ä¢ {problem}", styles['Bullet']))
    
    # –ê–ª–ª–µ—Ä–≥–∏–∏
    allergies = ', '.join(user_data.get('allergies', [])) or '–ù–µ —É–∫–∞–∑–∞–Ω—ã'
    story.append(Paragraph(f"<b>–ê–ª–ª–µ—Ä–≥–∏–∏:</b> {allergies}", styles['Normal']))
    story.append(Spacer(1, 24))
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    rec_title = Paragraph("<b>–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω —É—Ö–æ–¥–∞:</b>", styles['Heading2'])
    story.append(rec_title)
    story.append(Spacer(1, 12))
    
    daily_routine = recommendations.get('daily_routine', [])
    if daily_routine:
        for idx, item in enumerate(daily_routine, 1):
            symptoms_text = ", ".join(user_data.get('symptoms', [])) if user_data.get('symptoms') else "–ø—Ä–æ–±–ª–µ–º –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ"
            user_text = f"""
            –£ —Ç–µ–±—è {user_data.get('skin_type', '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω').lower()} –∫–æ–∂–∞.
            {"–ú—ã –∑–∞–º–µ—Ç–∏–ª–∏ —É —Ç–µ–±—è –Ω–µ–±–æ–ª—å—à—É—é –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å ‚Äî " + symptoms_text.lower() + "." 
             if user_data.get('symptoms') 
             else "–ü—Ä–æ–±–ª–µ–º –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ! –í—ã –º–æ–ª–æ–¥–µ—Ü, —á—Ç–æ —Ç–∞–∫ –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ —É—Ö–∞–∂–∏–≤–∞–µ—Ç–µ –∑–∞ –∫–æ–∂–µ–π –ª–∏—Ü–∞!"}
            –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å {item.get('method', '–£—Ö–æ–¥–æ–≤–∞—è –∫–æ—Å–º–µ—Ç–∏–∫–∞')} 
            {item.get('type', '–ö—Ä–µ–º')} –≤ —Ç–µ—á–µ–Ω–∏–µ {item.get('course_duration', 30)} –¥–Ω–µ–π.
            """
            # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
            rec_header = Paragraph(f"–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è {idx}: {item.get('method')} - {item.get('type')}", styles['RecommendationTitle'])
            story.append(rec_header)
            story.append(Paragraph(user_text, styles['Normal']))
            
            # –û—á–∏—â–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –æ—Ç HTML –∏ Markdown
            instruction = item.get('template', '–°–ª–µ–¥—É–π—Ç–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞')
            instruction = instruction.replace('<div class="recommendation-text">', '').replace('</div>', '')
            instruction = instruction.replace('<p>', '').replace('</p>', '<br/>')
            instruction = instruction.replace('**', '').replace('*', '')
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è
            contraindications = item.get('contraindications', ['–ù–µ —É–∫–∞–∑–∞–Ω—ã'])
            if isinstance(contraindications, list):
                contraindications = ', '.join(contraindications)
            contraindications = contraindications.replace(',,', ',').strip()
            # –ü–µ—Ä–µ–Ω–æ—Å–∏–º –¥–ª–∏–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏–π
            contraindications = '<br/>'.join([contraindications[i:i+80] for i in range(0, len(contraindications), 80)])

            details = [
                f"–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:<br/>{instruction}",
                f"–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {item.get('effectiveness', '–°—Ä–µ–¥–Ω—è—è')}%",
                f"–ü—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è:<br/>{contraindications}",
                f"–û–∂–∏–¥–∞–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã: {item.get('expected_results', '–ù–µ —É–∫–∞–∑–∞–Ω—ã')}"
            ]
            for detail in details:
                story.append(Paragraph(detail, styles['Bullet']))
            story.append(Spacer(1, 16))
    else:
        story.append(Paragraph("–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ–∫–∞ –Ω–µ—Ç.", styles['Normal']))
    
    story.append(Spacer(1, 24))
    footnote_text = "*–≠—Ç–∏ —Å–æ–≤–µ—Ç—ã –Ω–µ –∑–∞–º–µ–Ω—è—é—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –∫–æ—Å–º–µ—Ç–æ–ª–æ–≥–∞. –ü–µ—Ä–µ–¥ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º –Ω–æ–≤—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Å—Ç–∏ —Ç–µ—Å—Ç –Ω–∞ –∞–ª–ª–µ—Ä–≥–∏—á–µ—Å–∫—É—é —Ä–µ–∞–∫—Ü–∏—é."
    footnote = Paragraph(footnote_text, footnote_style)
    story.append(footnote)
    
    # –ü–æ–¥–ø–∏—Å—å
    story.append(Spacer(1, 12))
    signature = Paragraph("¬© 2025 Beauty Tracker | –°–æ–∑–¥–∞–Ω–æ —Å –∑–∞–±–æ—Ç–æ–π –¥–ª—è –≤–∞—à–µ–π –∫–æ–∂–∏ üå∏", footnote_style)
    story.append(signature)
    
    doc.build(story)
    return filename